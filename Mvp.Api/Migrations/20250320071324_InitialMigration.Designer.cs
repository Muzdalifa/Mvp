// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mvp.Api.Database;

#nullable disable

namespace Mvp.Api.Migrations
{
    [DbContext(typeof(MvpDbContext))]
    [Migration("20250320071324_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("mvp")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mvp.Domain.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies", "mvp");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c0fda5f-15bb-4bfa-b354-6fdf243520d5"),
                            Address = "123 Company Street",
                            Description = "A leading company.",
                            IsActive = false,
                            Name = "Company",
                            Website = "https://company.com"
                        },
                        new
                        {
                            Id = new Guid("18e795b5-c9da-4cbe-a3ed-9b50232791cb"),
                            Address = "456 Test Street",
                            Description = "Test company.",
                            IsActive = false,
                            Name = "Test",
                            Website = "https://test.com"
                        });
                });

            modelBuilder.Entity("Mvp.Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Departments", "mvp");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cfcea384-82f0-4072-921f-4fa56aca0321"),
                            CompanyId = new Guid("4c0fda5f-15bb-4bfa-b354-6fdf243520d5"),
                            Location = "Building A",
                            Name = "IT Department"
                        },
                        new
                        {
                            Id = new Guid("8f2d33f9-d06a-45ce-872b-c4ddf384eabf"),
                            CompanyId = new Guid("4c0fda5f-15bb-4bfa-b354-6fdf243520d5"),
                            Location = "Building B",
                            Name = "Marketing Department"
                        },
                        new
                        {
                            Id = new Guid("c2a761be-c44d-4cf3-b7c4-32ee80d036ca"),
                            CompanyId = new Guid("4c0fda5f-15bb-4bfa-b354-6fdf243520d5"),
                            Location = "Building C",
                            Name = "Finance Department"
                        },
                        new
                        {
                            Id = new Guid("d1a761be-c44d-4cf3-b7c4-32ee80d036ca"),
                            CompanyId = new Guid("18e795b5-c9da-4cbe-a3ed-9b50232791cb"),
                            Location = "Building D",
                            Name = "Research Department"
                        });
                });

            modelBuilder.Entity("Mvp.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("ManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Employees", "mvp");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dd26e6f2-7d28-4dbd-a82e-c165ed480971"),
                            CompanyId = new Guid("4c0fda5f-15bb-4bfa-b354-6fdf243520d5"),
                            Email = "gary.smith@company.com",
                            FirstName = "Gary",
                            HireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Smith",
                            PhoneNumber = "555-1001",
                            Position = "Chief Executive Officer"
                        },
                        new
                        {
                            Id = new Guid("062cf920-2fca-4f83-afb3-e133c7ff5ff5"),
                            CompanyId = new Guid("4c0fda5f-15bb-4bfa-b354-6fdf243520d5"),
                            Email = "mary.johnson@company.com",
                            FirstName = "Mary",
                            HireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Johnson",
                            ManagerId = new Guid("dd26e6f2-7d28-4dbd-a82e-c165ed480971"),
                            PhoneNumber = "555-1002",
                            Position = "IT Manager"
                        },
                        new
                        {
                            Id = new Guid("b370958b-7b9b-4688-a8c9-db0b1cd61298"),
                            CompanyId = new Guid("4c0fda5f-15bb-4bfa-b354-6fdf243520d5"),
                            Email = "john.williams@company.com",
                            FirstName = "John",
                            HireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Williams",
                            ManagerId = new Guid("dd26e6f2-7d28-4dbd-a82e-c165ed480971"),
                            PhoneNumber = "555-1003",
                            Position = "Marketing Specialist"
                        },
                        new
                        {
                            Id = new Guid("19891195-af38-4d7b-afc9-ca5ec7aefc7a"),
                            CompanyId = new Guid("4c0fda5f-15bb-4bfa-b354-6fdf243520d5"),
                            Email = "jane.brown@company.com",
                            FirstName = "Jane",
                            HireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Brown",
                            ManagerId = new Guid("dd26e6f2-7d28-4dbd-a82e-c165ed480971"),
                            PhoneNumber = "555-1004",
                            Position = "Financial Analyst"
                        },
                        new
                        {
                            Id = new Guid("642d23a7-62ac-49cb-bdbc-b74dab2d0a06"),
                            CompanyId = new Guid("4c0fda5f-15bb-4bfa-b354-6fdf243520d5"),
                            Email = "robert.chen@company.com",
                            FirstName = "Robert",
                            HireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Chen",
                            ManagerId = new Guid("062cf920-2fca-4f83-afb3-e133c7ff5ff5"),
                            PhoneNumber = "555-1005",
                            Position = "Software Developer"
                        },
                        new
                        {
                            Id = new Guid("5ca3b0c3-62a2-484a-8d7a-7547feb3d05c"),
                            CompanyId = new Guid("4c0fda5f-15bb-4bfa-b354-6fdf243520d5"),
                            Email = "sarah.miller@company.com",
                            FirstName = "Sarah",
                            HireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Miller",
                            ManagerId = new Guid("062cf920-2fca-4f83-afb3-e133c7ff5ff5"),
                            PhoneNumber = "555-1006",
                            Position = "System Analyst"
                        },
                        new
                        {
                            Id = new Guid("715714ec-a50e-45ff-8e07-ce5a6df80674"),
                            CompanyId = new Guid("18e795b5-c9da-4cbe-a3ed-9b50232791cb"),
                            Email = "alice.green@test.com",
                            FirstName = "Alice",
                            HireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Green",
                            PhoneNumber = "555-2001",
                            Position = "Research Scientist"
                        });
                });

            modelBuilder.Entity("Mvp.Domain.Entities.EmployeeDepartment", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsManager")
                        .HasColumnType("bit");

                    b.HasKey("EmployeeId", "DepartmentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("EmployeeDepartments", "mvp");

                    b.HasData(
                        new
                        {
                            EmployeeId = new Guid("062cf920-2fca-4f83-afb3-e133c7ff5ff5"),
                            DepartmentId = new Guid("cfcea384-82f0-4072-921f-4fa56aca0321"),
                            IsManager = true
                        },
                        new
                        {
                            EmployeeId = new Guid("b370958b-7b9b-4688-a8c9-db0b1cd61298"),
                            DepartmentId = new Guid("cfcea384-82f0-4072-921f-4fa56aca0321"),
                            IsManager = false
                        },
                        new
                        {
                            EmployeeId = new Guid("b370958b-7b9b-4688-a8c9-db0b1cd61298"),
                            DepartmentId = new Guid("8f2d33f9-d06a-45ce-872b-c4ddf384eabf"),
                            IsManager = false
                        },
                        new
                        {
                            EmployeeId = new Guid("19891195-af38-4d7b-afc9-ca5ec7aefc7a"),
                            DepartmentId = new Guid("c2a761be-c44d-4cf3-b7c4-32ee80d036ca"),
                            IsManager = false
                        },
                        new
                        {
                            EmployeeId = new Guid("19891195-af38-4d7b-afc9-ca5ec7aefc7a"),
                            DepartmentId = new Guid("8f2d33f9-d06a-45ce-872b-c4ddf384eabf"),
                            IsManager = false
                        },
                        new
                        {
                            EmployeeId = new Guid("642d23a7-62ac-49cb-bdbc-b74dab2d0a06"),
                            DepartmentId = new Guid("cfcea384-82f0-4072-921f-4fa56aca0321"),
                            IsManager = false
                        },
                        new
                        {
                            EmployeeId = new Guid("5ca3b0c3-62a2-484a-8d7a-7547feb3d05c"),
                            DepartmentId = new Guid("cfcea384-82f0-4072-921f-4fa56aca0321"),
                            IsManager = false
                        });
                });

            modelBuilder.Entity("Mvp.Domain.Entities.Department", b =>
                {
                    b.HasOne("Mvp.Domain.Entities.Company", "Company")
                        .WithMany("Departments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Mvp.Domain.Entities.Employee", b =>
                {
                    b.HasOne("Mvp.Domain.Entities.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mvp.Domain.Entities.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Company");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Mvp.Domain.Entities.EmployeeDepartment", b =>
                {
                    b.HasOne("Mvp.Domain.Entities.Department", "Department")
                        .WithMany("EmployeeDepartments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mvp.Domain.Entities.Employee", "Employee")
                        .WithMany("EmployeeDepartments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Mvp.Domain.Entities.Company", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Mvp.Domain.Entities.Department", b =>
                {
                    b.Navigation("EmployeeDepartments");
                });

            modelBuilder.Entity("Mvp.Domain.Entities.Employee", b =>
                {
                    b.Navigation("EmployeeDepartments");
                });
#pragma warning restore 612, 618
        }
    }
}
